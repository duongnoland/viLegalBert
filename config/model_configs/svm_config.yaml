# ðŸš€ Cáº¥u hÃ¬nh mÃ´ hÃ¬nh SVM cho viLegalBert
# PhÃ¢n loáº¡i vÄƒn báº£n phÃ¡p luáº­t Viá»‡t Nam

# ============================================================================
# THÃ”NG TIN MÃ” HÃŒNH
# ============================================================================
model_info:
  name: "SVM"
  type: "Traditional Machine Learning"
  architecture: "Support Vector Machine with TF-IDF features"
  language: "Vietnamese"
  description: "SVM classifier sá»­ dá»¥ng TF-IDF features cho phÃ¢n loáº¡i vÄƒn báº£n phÃ¡p lÃ½"
  
# ============================================================================
# Cáº¤U HÃŒNH FEATURE EXTRACTION
# ============================================================================
feature_extraction:
  # TF-IDF Vectorization
  tfidf:
    max_features: 10000
    min_df: 2
    max_df: 0.95
    ngram_range: [1, 3]  # unigrams, bigrams, trigrams
    stop_words: null  # KhÃ´ng sá»­ dá»¥ng stop words cho vÄƒn báº£n phÃ¡p lÃ½
    
  # Text preprocessing
  preprocessing:
    lowercase: false  # Giá»¯ nguyÃªn chá»¯ hoa cho vÄƒn báº£n phÃ¡p lÃ½
    remove_punctuation: false
    remove_numbers: false
    normalize_unicode: true
    remove_tone_marks: false
    
  # Feature selection
  feature_selection:
    enable: true
    method: "chi2"  # chi2, f_classif, mutual_info_classif
    k_best: 5000
    threshold: 0.01
    
# ============================================================================
# Cáº¤U HÃŒNH SVM
# ============================================================================
svm:
  # Kernel options
  kernel: "rbf"  # linear, rbf, poly, sigmoid
  
  # RBF kernel parameters
  rbf:
    gamma: "scale"  # scale, auto, float
    C: 1.0
    
  # Linear kernel parameters
  linear:
    C: 1.0
    dual: true
    
  # Polynomial kernel parameters
  poly:
    degree: 3
    gamma: "scale"
    coef0: 0.0
    
  # Sigmoid kernel parameters
  sigmoid:
    gamma: "scale"
    coef0: 0.0
    
  # General parameters
  general:
    probability: true
    class_weight: "balanced"
    random_state: 42
    max_iter: 2000
    cache_size: 200
    
# ============================================================================
# Cáº¤U HÃŒNH CLASSIFIER HEADS
# ============================================================================
classifier:
  # Level 1: Loáº¡i vÄƒn báº£n cÆ¡ báº£n
  level1:
    name: "Document Type SVM Classifier"
    num_classes: 10
    one_vs_rest: true
    calibration: true
    calibration_method: "isotonic"  # isotonic, sigmoid
    
  # Level 2: Domain phÃ¡p lÃ½
  level2:
    name: "Legal Domain SVM Classifier"
    num_classes: 15
    one_vs_rest: true
    calibration: true
    calibration_method: "isotonic"
    
# ============================================================================
# Cáº¤U HÃŒNH TRAINING
# ============================================================================
training:
  # Hyperparameter tuning
  hyperparameter_tuning:
    enable: true
    method: "grid_search"  # grid_search, random_search, bayesian_optimization
    
    # Grid search parameters
    grid_search:
      param_grid:
        C: [0.1, 1, 10, 100]
        gamma: [0.001, 0.01, 0.1, 1]
        kernel: ["rbf", "linear"]
      cv: 5
      scoring: "f1_weighted"
      n_jobs: -1
      
    # Random search parameters
    random_search:
      n_iter: 100
      cv: 5
      scoring: "f1_weighted"
      n_jobs: -1
      
  # Cross-validation
  cross_validation:
    enable: true
    cv: 5
    stratified: true
    shuffle: true
    random_state: 42
    
  # Model persistence
  model_persistence:
    save_format: "pickle"  # pickle, joblib
    compression: "gzip"
    save_metadata: true
    
# ============================================================================
# Cáº¤U HÃŒNH EVALUATION
# ============================================================================
evaluation:
  # Metrics
  metrics: ["accuracy", "precision", "recall", "f1", "confusion_matrix"]
  
  # Classification report
  classification_report:
    enable: true
    output_dict: true
    zero_division: 0
    
  # Confusion matrix
  confusion_matrix:
    enable: true
    normalize: "true"  # true, pred, all, None
    
  # ROC and PR curves
  curves:
    roc_curve: true
    pr_curve: true
    average_precision: true
    
# ============================================================================
# Cáº¤U HÃŒNH INFERENCE
# ============================================================================
inference:
  # Prediction
  prediction:
    return_proba: true
    return_decision_function: true
    
  # Post-processing
  post_processing:
    confidence_threshold: 0.7
    top_k_predictions: 3
    
  # Batch processing
  batch_processing:
    batch_size: 1000
    memory_efficient: true
    
# ============================================================================
# Cáº¤U HÃŒNH OPTIMIZATION
# ============================================================================
optimization:
  # Memory optimization
  memory:
    sparse_features: true
    chunk_size: 1000
    
  # Speed optimization
  speed:
    parallel_processing: true
    n_jobs: -1
    precompute: true
    
  # Model compression
  compression:
    enable: false
    method: "quantization"  # quantization, pruning
    target_size: "50%"
    
# ============================================================================
# Cáº¤U HÃŒNH MONITORING
# ============================================================================
monitoring:
  # Training monitoring
  training_monitoring:
    enable: true
    log_metrics: true
    early_stopping: false
    
  # Model performance
  performance_monitoring:
    enable: true
    track_drift: true
    alert_threshold: 0.1
    
# ============================================================================
# Cáº¤U HÃŒNH DEPLOYMENT
# ============================================================================
deployment:
  # Model serving
  serving:
    framework: "flask"  # flask, fastapi, django
    batch_size: 100
    timeout: 30
    
  # API endpoints
  api:
    predict_endpoint: "/predict"
    predict_proba_endpoint: "/predict_proba"
    health_check_endpoint: "/health"
    
  # Model versioning
  versioning:
    enable: true
    version_format: "semantic"  # semantic, timestamp, hash
    auto_version: true 